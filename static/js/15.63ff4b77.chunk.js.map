{"version":3,"sources":["components/Button/Button.tsx","views/Pit/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Pit/components/ExchangeCard.tsx","hooks/useCashPriceInLastTWAP.ts","views/Pit/components/ExchangeStat.tsx","hooks/useBondsPurchasable.ts","tomb-finance/constants.ts","views/Pit/Pit.tsx","hooks/useRefresh.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","hooks/useAllowance.ts","components/ModalActions/ModalActions.tsx","hooks/useApprove.ts","components/UnlockWallet/UnlockWallet.tsx","components/Spacer/Spacer.tsx","components/PageHeader/PageHeader.tsx","hooks/useBondStats.ts","assets/img/pit.png"],"names":["StyledButton","styled","button","props","theme","color","grey","boxShadow","disabled","fontSize","size","padding","undefined","StyledLink","Link","spacing","StyledExternalLink","a","Button","buttonColor","buttonSize","buttonPadding","children","href","onClick","text","to","variant","useContext","ThemeContext","teal","primary","main","ButtonChild","useMemo","target","ExchangeModal","max","title","description","onConfirm","onDismiss","action","tokenName","useState","val","setVal","fullBalance","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","value","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","symbol","Label","ModalActions","useCatchError","addPopup","useAddPopup","promise","message","catch","err","includes","console","error","stack","StyledCardTitle","div","StyledCardIcon","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabledDescription","catchError","Treasury","useTombFinance","contracts","useApprove","address","approveStatus","approve","balance","useTokenBalance","useModal","onPresent","Card","CardContent","TokenSymbol","icon","faArrowRight","ApprovalState","APPROVED","PENDING","UNKNOWN","useCashPriceInLastTWAP","BigNumber","from","price","setPrice","tombFinance","fetchCashPrice","getTombPriceInLastTWAP","useEffect","refreshInterval","setInterval","config","clearInterval","ExchangeStat","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","BackgroundImage","createGlobalStyle","PitImage","StyledBond","StyledCardWrapper","StyledStatsWrapper","Pit","path","useRouteMatch","account","useWallet","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","bondsPurchasable","bondBalance","TBOND","handleBuyBonds","amount","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","Page","exact","PageHeader","subtitle","TOMB","getDisplayBalance","Spacer","eq","UnlockWallet","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","chainId","dispatch","useDispatch","response","approval","hash","Error","useAllTransactions","state","useSelector","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","Object","keys","some","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","borderRadius","StyledInput","input","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","toLocaleString","useAllowance","token","pendingApproval","allowance","setAllowance","fetchAllowance","StyledModalActions","StyledModalAction","l","React","Children","toArray","length","map","child","i","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","currentAllowance","approvalState","lt","NOT_APPROVED","Box","style","position","top","left","transform","AccountButton","s","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3","stat","setStat","getBondStat","fetchBondPrice","module","exports"],"mappings":"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","file":"static/js/15.63ff4b77.chunk.js","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\ninterface ButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  href?: string;\n  onClick?: () => void;\n  size?: 'sm' | 'md' | 'lg';\n  text?: string;\n  to?: string;\n  variant?: 'default' | 'secondary' | 'tertiary';\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to, variant }) => {\n  const { color, spacing } = useContext(ThemeContext);\n\n  let buttonColor: string;\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.teal[200];\n      break;\n    case 'default':\n    default:\n      buttonColor = color.primary.main;\n  }\n\n  let boxShadow: string;\n  let buttonSize: number;\n  let buttonPadding: number;\n  let fontSize: number;\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3];\n      buttonSize = 36;\n      fontSize = 14;\n      break;\n    case 'lg':\n      buttonPadding = spacing[4];\n      buttonSize = 72;\n      fontSize = 16;\n      break;\n    case 'md':\n    default:\n      buttonPadding = spacing[4];\n      buttonSize = 56;\n      fontSize = 16;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>;\n    } else if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      );\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  boxShadow: string;\n  color: string;\n  disabled?: boolean;\n  fontSize: number;\n  padding: number;\n  size: number;\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[900]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${(props) => props.boxShadow};\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  &:hover {\n    background-color: ${(props) => props.color};\n    color: ${(props) => props.theme.color.grey[900]};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default Button;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport Button from '../../../components/Button';\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { BigNumber } from 'ethers';\nimport Label from '../../../components/Label';\n\ninterface ExchangeModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  title: string;\n  description: string;\n  action: string;\n  tokenName: string;\n}\n\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\n  max,\n  title,\n  description,\n  onConfirm,\n  onDismiss,\n  action,\n  tokenName,\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={title} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <Label text={description} />\n      <ModalActions>\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text={action} onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default ExchangeModal;\n","import { useCallback } from 'react';\nimport { useAddPopup } from '../state/application/hooks';\n\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\n\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\n      promise.catch((err) => {\n        if (err.message.includes('User denied')) {\n          // User denied transaction signature on MetaMask.\n          return;\n        }\n        console.error(`Uncaught exception: ${err.stack}`);\n        addPopup({ error: { message, stack: err.stack } });\n      });\n    },\n    [addPopup],\n  );\n}\n\nexport default useCatchError;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Card } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport useTombFinance from '../../../hooks/useTombFinance';\nimport Label from '../../../components/Label';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport useModal from '../../../hooks/useModal';\nimport ExchangeModal from './ExchangeModal';\nimport ERC20 from '../../../tomb-finance/ERC20';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useCatchError from '../../../hooks/useCatchError';\n\ninterface ExchangeCardProps {\n  action: string;\n  fromToken: ERC20;\n  fromTokenName: string;\n  toToken: ERC20;\n  toTokenName: string;\n  priceDesc: string;\n  onExchange: (amount: string) => void;\n  disabled?: boolean;\n  disabledDescription?: string;\n}\n\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\n  action,\n  fromToken,\n  fromTokenName,\n  toToken,\n  toTokenName,\n  priceDesc,\n  onExchange,\n  disabled = false,\n  disabledDescription,\n}) => {\n  const catchError = useCatchError();\n  const {\n    contracts: { Treasury },\n  } = useTombFinance();\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\n\n  const balance = useTokenBalance(fromToken);\n  const [onPresent, onDismiss] = useModal(\n    <ExchangeModal\n      title={action}\n      description={priceDesc}\n      max={balance}\n      onConfirm={(value) => {\n        onExchange(value);\n        onDismiss();\n      }}\n      action={action}\n      tokenName={fromTokenName}\n    />,\n  );\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\n          <StyledExchanger>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={fromToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={fromTokenName} variant=\"normal\" />\n            </StyledToken>\n            <StyledExchangeArrow>\n              <FontAwesomeIcon icon={faArrowRight} />\n            </StyledExchangeArrow>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={toToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={toTokenName} variant=\"normal\" />\n            </StyledToken>\n          </StyledExchanger>\n          <StyledDesc>{priceDesc}</StyledDesc>\n          <StyledCardActions>\n            {approveStatus !== ApprovalState.APPROVED && !disabled ? (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\n              >\n                {`Approve ${fromTokenName}`}\n              </Button>\n            ) : (\n              <Button color=\"primary\" variant=\"contained\" onClick={onPresent} disabled={disabled}>\n                {disabledDescription || action}\n              </Button>\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  height: 64px;\n  justify-content: center;\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\n`;\n\nconst StyledCardIcon = styled.div`\n  background-color: ${(props) => props.theme.color.grey[900]};\n  width: 72px;\n  height: 72px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledExchanger = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\n`;\n\nconst StyledExchangeArrow = styled.div`\n  font-size: 20px;\n  padding-left: ${(props) => props.theme.spacing[3]}px;\n  padding-right: ${(props) => props.theme.spacing[3]}px;\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledToken = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n  width: 100%;\n`;\n\nconst StyledDesc = styled.span``;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default ExchangeCard;\n","import { useCallback, useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport config from '../config';\nimport { BigNumber } from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await tombFinance.getTombPriceInLastTWAP());\n  }, [tombFinance]);\n\n  useEffect(() => {\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch TOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, tombFinance, fetchCashPrice]);\n\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Card } from '@material-ui/core';\n\ninterface ExchangeStatProps {\n  tokenName: string;\n  description: string;\n  price: string;\n}\n\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({ tokenName, description, price }) => {\n  return (\n    <Card>\n      <StyledCardContentInner>\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} FTM`}</StyledCardTitle>\n        <StyledDesc>{description}</StyledDesc>\n      </StyledCardContentInner>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledDesc = styled.span`\n  //color: ${(props) => props.theme.color.grey[300]};\n  text-align: center;\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: ${(props) => props.theme.spacing[2]}px;\n`;\n\nexport default ExchangeStat;\n","import { useCallback, useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../tomb-finance/ERC20';\nimport useTombFinance from './useTombFinance';\nimport config from '../config';\n\nconst useBondsPurchasable = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    async function fetchBondsPurchasable() {\n        try {\n            setBalance(await tombFinance.getBondsPurchasable());\n        }\n        catch(err) {\n            console.error(err);\n        }\n      }\n    fetchBondsPurchasable();\n  }, [setBalance, tombFinance]);\n\n  return balance;\n};\n\nexport default useBondsPurchasable;\n","import { BigNumber } from 'ethers';\n\nexport const DECIMALS_18 = BigNumber.from(10).pow(18);\n\nexport const BOND_REDEEM_PRICE = 1.01;\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\n","import React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/pit.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${PitImage}) no-repeat !important;\n    background-size: cover !important;\n  }\n`;\n\nconst Pit: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { account } = useWallet();\n  const tombFinance = useTombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n\n  const bondBalance = useTokenBalance(tombFinance?.TBOND);\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.buyBonds(amount);\n      addTransaction(tx, {\n        summary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`,\n      });\n    },\n    [tombFinance, addTransaction],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.redeemBonds(amount);\n      addTransaction(tx, { summary: `Redeem ${amount} TBOND` });\n    },\n    [tombFinance, addTransaction],\n  );\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n        {!!account ? (\n          <>\n            <Route exact path={path}>\n              <PageHeader icon={'🏦'} title=\"Buy & Redeem Bonds\" subtitle=\"Earn premiums upon redemption\" />\n            </Route>\n            <StyledBond>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Purchase\"\n                  fromToken={tombFinance.TOMB}\n                  fromTokenName=\"TOMB\"\n                  toToken={tombFinance.TBOND}\n                  toTokenName=\"TBOND\"\n                  priceDesc={\n                    !isBondPurchasable\n                      ? 'TOMB is over peg'\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' TBOND available for purchase'\n                  }\n                  onExchange={handleBuyBonds}\n                  disabled={!bondStat || isBondRedeemable}\n                />\n              </StyledCardWrapper>\n              <StyledStatsWrapper>\n                <ExchangeStat\n                  tokenName=\"TOMB\"\n                  description=\"Last-Hour TWAP Price\"\n                  price={getDisplayBalance(cashPrice, 18, 4)}\n                />\n                <Spacer size=\"md\" />\n                <ExchangeStat\n                  tokenName=\"TBOND\"\n                  description=\"Current Price: (TOMB)^2\"\n                  price={Number(bondStat?.tokenInFtm).toFixed(2) || '-'}\n                />\n              </StyledStatsWrapper>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Redeem\"\n                  fromToken={tombFinance.TBOND}\n                  fromTokenName=\"TBOND\"\n                  toToken={tombFinance.TOMB}\n                  toTokenName=\"TOMB\"\n                  priceDesc={`${getDisplayBalance(bondBalance)} TBOND Available in wallet`}\n                  onExchange={handleRedeemBonds}\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n                  disabledDescription={!isBondRedeemable ? `Enabled when TOMB > ${BOND_REDEEM_PRICE}FTM` : null}\n                />\n              </StyledCardWrapper>\n            </StyledBond>\n          </>\n        ) : (\n          <UnlockWallet />\n        )}\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Pit;\n","import { useContext } from 'react'\nimport { RefreshContext } from './../contexts/RefreshContext'\n\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh","import { TransactionResponse } from '@ethersproject/providers';\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWallet } from 'use-wallet';\n\nimport { AppDispatch, AppState } from '../index';\nimport { addTransaction, clearAllTransactions } from './actions';\nimport { TransactionDetails } from './reducer';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\n) => void {\n  const { chainId, account } = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return;\n      if (!chainId) return;\n\n      const { hash } = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useWallet();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions();\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n\nexport function useClearAllTransactions(): { clearAllTransactions: () => void } {\n  const { chainId } = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n  return {\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({ chainId })), [dispatch, chainId]),\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button } from '@material-ui/core';\nimport Input, { InputProps } from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../tomb-finance/ERC20';\n\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\n  const [allowance, setAllowance] = useState<BigNumber>(null);\n  const { account } = useWallet();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\n    }\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import { BigNumber, ethers } from 'ethers';\nimport { useCallback, useMemo } from 'react';\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../tomb-finance/ERC20';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\n  const pendingApproval = useHasPendingApproval(token.address, spender);\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(spender, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: spender,\n      },\n    });\n  }, [approvalState, token, spender, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApprove;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport AccountButton from '../Nav/AccountButton';\n\nconst UnlockWallet = () => {\n  return (\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\n      <AccountButton />\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\n    </Box>\n  );\n};\n\nexport default UnlockWallet;\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface PageHeaderProps {\n  icon: React.ReactNode;\n  subtitle?: string;\n  title?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\n  return (\n    <StyledPageHeader>\n      {/* <StyledIcon>{icon}</StyledIcon> */}\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </StyledPageHeader>\n  );\n};\n\nconst StyledPageHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\n  padding-top: ${(props) => props.theme.spacing[6]}px;\n  max-width: 512px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst StyledTitle = styled.h1`\n  color: ${(props) => props.theme.color.grey[100]};\n  font-size: 36px;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSubtitle = styled.h3`\n  color: ${(props) => props.theme.color.grey[400]};\n  font-size: 18px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\n\nexport default PageHeader;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport { TokenStat } from '../tomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useBondStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const { slowRefresh } = useRefresh();\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    async function fetchBondPrice() {\n      try {\n        setStat(await tombFinance.getBondStat());\n      }\n      catch(err){\n        console.error(err);\n      }\n    }\n    fetchBondPrice();\n  }, [setStat, tombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useBondStats;\n","module.exports = __webpack_public_path__ + \"static/media/pit.268bf984.png\";"],"sourceRoot":""}
{"version":3,"sources":["views/Genesis/Genesis.js","assets/img/home.png"],"names":["BackgroundImage","createGlobalStyle","HomeImage","makeStyles","theme","button","breakpoints","down","marginTop","createData","pool","apr","tvl","deposit","earning","Row","props","row","useState","open","setOpen","checked","setChecked","handleClick","Fragment","TableRow","sx","borderBottom","onClick","TableCell","component","scope","style","display","alignItems","src","width","height","marginRight","alt","padding","colSpan","Collapse","in","timeout","unmountOnExit","Box","backgroundColor","borderRadius","color","gap","justifyContent","margin","Grid","container","spacing","item","xs","border","Button","className","textAlign","activerows","mygenesisrows","inactiverows","options","Home","showType","setShowType","React","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","Boolean","Page","columns","AccessTime","size","borderBottomLeftRadius","borderBottomRightRadius","cursor","List","aria-label","bgcolor","background","ListItem","id","aria-haspopup","aria-controls","aria-expanded","undefined","event","currentTarget","ListItemText","secondary","Menu","onClose","MenuListProps","role","map","option","index","MenuItem","key","selected","handleMenuItemClick","borderTopLeftRadius","borderTopRightRadius","TableContainer","Paper","Table","TableHead","TableBody","name","module","exports"],"mappings":"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","file":"static/js/22.8df7c9a7.chunk.js","sourcesContent":["import React, {useState, useMemo } from 'react';\r\nimport Page from '../../components/Page';\r\nimport HomeImage from '../../assets/img/home.png';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { Box, Button, Card, CardContent, Grid, Paper } from '@material-ui/core';\r\nimport { AccessTime } from '@material-ui/icons';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background: url(${HomeImage}) no-repeat !important;\r\n    background-size: cover !important;\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    [theme.breakpoints.down('415')]: {\r\n      marginTop: '10px',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction createData(pool, apr, tvl, deposit, earning) {\r\n  return {\r\n    pool,\r\n    apr,\r\n    tvl,\r\n    deposit,\r\n    earning,\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }} onClick={() => setOpen(!open)}>\r\n        <TableCell component=\"th\" scope=\"row\" style={{display : 'flex', alignItems : 'center'}}>\r\n          <img src={`https://swap.tomb.com/images/tokens/${row.pool}.svg`} style={{width : '24px', height : '24px', marginRight : '10px'}} alt='tokenImg'/>\r\n          {row.pool}\r\n        </TableCell>\r\n        <TableCell>{row.apr}</TableCell>\r\n        <TableCell>{row.tvl}</TableCell>\r\n        <TableCell>{row.deposit}</TableCell>\r\n        <TableCell>{row.earning}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ padding: \"0px\"}} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box style={{\r\n                  backgroundColor: \"rgba(59,130,246,0.5)\",\r\n                  borderRadius: 20,\r\n                  color: 'white',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 40,\r\n                  justifyContent : \"space-between\",\r\n                  padding: \"40px\",\r\n                  margin : \"40px\"\r\n                }}\r\n              sx={{ margin: 1 }} >\r\n                <Grid container spacing={12} style={{justifyContent : \"space-between\"}}>\r\n                  <Grid item xs={5}>\r\n                    <Grid container style={{\r\n                      border : \"1px solid white\",\r\n                      borderRadius : \"20px\",\r\n                    }}>\r\n                      <Grid item xs={6} style={{padding : \"5px\"}}>\r\n                        <Button className={[checked ? 'checkedBtn' : null, 'depositBtn']} onClick={()=>{handleClick()}}>Deposit</Button>\r\n                      </Grid>\r\n                      <Grid item xs={6} style={{padding : \"5px\"}}>\r\n                        <Button className={[checked ? null : 'checkedBtn', 'depositBtn']} onClick={()=>{handleClick()}}>Earning</Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container className='amountInfo'>\r\n                      <Grid item xs={6} style={{padding : \"5px\"}}>\r\n                        <p>Enter an amount</p>\r\n                        <p>$0.00</p>\r\n                      </Grid>\r\n                      <Grid item xs={6} style={{padding : \"5px\"}}>\r\n                        <Grid container>\r\n                          <Grid item xs={6} style={{padding : \"5px\"}}>\r\n                            <Button className='depositAmountBtn'>50%</Button>\r\n                          </Grid>\r\n                          <Grid item xs={6} style={{padding : \"5px\"}}>\r\n                            <Button className='depositAmountBtn'>Max</Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <p style={{textAlign : 'center'}}>Balance: 0.0000 WFTM</p>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Button className='connectWalletBtn'>Connect Wallet</Button>\r\n                    </Grid>\r\n                    <p>There is a 0.5% deposit fee for this staking pool.</p>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <p>WFTM staked</p>\r\n                    <p>0</p>\r\n                    <Button className='harvestBtn'>Harvest</Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst activerows = [\r\n  createData('LSHARE', 0.00, 6.0, 24, 4.0,4.0),\r\n];\r\nconst mygenesisrows = [\r\n];\r\nconst inactiverows = [\r\n  createData('LSHARE', 0.00, 6.0, 24, 4.0,4.0),\r\n  createData('TOMB', 0.00, 9.0, 37, 4.3,4.0),\r\n  createData('TSHARE', 0.00, 16.0, 24, 6.0, 4.0),\r\n  createData('L3USD', 0.00, 3.7, 67, 4.3, 4.0),\r\n  createData('WBTC', 0.00, 16.0, 49, 3.9, 4.0),\r\n];\r\n\r\nconst options = [\r\n  '2023 Q1',\r\n  '2022 Q4',\r\n  '2022 Q3',\r\n];\r\n\r\nconst Home = () => {\r\n  const [showType, setShowType] = useState('active');\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleActiveClick = () => {\r\n    setShowType('active')\r\n  }\r\n\r\n  const handleMyGenesisClick = () => {\r\n    setShowType('mygenesis')\r\n  }\r\n\r\n  const handleInactiveClick = () => {\r\n    setShowType('inactive')\r\n  }\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <BackgroundImage />\r\n      <Grid container spacing={3} columns={6}>\r\n        <Box \r\n          style={{\r\n            backgroundColor: \"rgba(99, 78, 185, 0.9)\",\r\n            padding: 25,\r\n            width: \"100%\",\r\n            borderRadius: 20,\r\n            color: 'white',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 40\r\n          }}>\r\n          <Box\r\n            style={{\r\n              padding: \"10px 24px\",\r\n              borderRadius: 30,\r\n              backgroundColor: \"rgb(255, 242, 209)\",\r\n              color: \"rgb(57, 64, 78)\",\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}>\r\n            <AccessTime size=\"large\"/>\r\n          </Box>\r\n          0d 0h 0m 0s left to earn rewards in these Nursery Pools\r\n        </Box>\r\n      </Grid>\r\n      <Grid container spacing={3} display = \"flex\" style={{marginTop : \"70px\"}}>\r\n        <Box style={{\r\n          backgroundColor: \"rgba(86 26 247 / 76%)\",\r\n          padding: 25,\r\n          width: \"100%\",\r\n          borderRadius: 20,\r\n          color: 'white',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 40,\r\n          justifyContent : \"space-between\",\r\n          borderBottomLeftRadius : 0,\r\n          borderBottomRightRadius : 0\r\n        }}>\r\n          <div style={{display : \"flex\"}}>\r\n            <Box\r\n              style={{\r\n                padding: \"10px 24px\",\r\n                borderRadius: 30,\r\n                backgroundColor: \"rgb(255, 242, 209)\",\r\n                color: \"rgb(57, 64, 78)\",\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginRight: 40,\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={()=>{handleActiveClick()}}\r\n            >\r\n              Active\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                padding: \"10px 24px\",\r\n                borderRadius: 30,\r\n                backgroundColor: \"rgb(255, 242, 209)\",\r\n                color: \"rgb(57, 64, 78)\",\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginRight: 40,\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={()=>{handleMyGenesisClick()}}\r\n            >\r\n              My Genesis\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                padding: \"10px 24px\",\r\n                borderRadius: 30,\r\n                backgroundColor: \"rgb(255, 242, 209)\",\r\n                color: \"rgb(57, 64, 78)\",\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginRight: 40,\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={()=>{handleInactiveClick()}}\r\n            >\r\n              Inactive\r\n            </Box>\r\n          </div>\r\n          <div style={{display : \"flex\"}}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"Device settings\"\r\n              sx={{ bgcolor: 'background.paper' }}\r\n              style={{background : 'transparent'}}\r\n            >\r\n              <ListItem\r\n                button\r\n                id=\"lock-button\"\r\n                aria-haspopup=\"listbox\"\r\n                aria-controls=\"lock-menu\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClickListItem}\r\n                style={{\r\n                  padding: \"10px 24px\",\r\n                  borderRadius: 30,\r\n                  backgroundColor: \"rgb(255, 242, 209)\",\r\n                  color: \"rgb(57, 64, 78)\",\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  secondary={options[selectedIndex]}\r\n                />\r\n              </ListItem>\r\n            </List>\r\n            <Menu\r\n              id=\"lock-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              MenuListProps={{\r\n                'aria-labelledby': 'lock-button',\r\n                role: 'listbox',\r\n              }}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={option}\r\n                  selected={index === selectedIndex}\r\n                  onClick={(event) => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n        </Box>\r\n        <Box style={{\r\n          backgroundColor: \"rgba(59,130,246,0.5)\",\r\n          width: \"100%\",\r\n          borderRadius: 20,\r\n          color: 'white',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 40,\r\n          justifyContent : \"space-between\",\r\n          borderTopLeftRadius : 0,\r\n          borderTopRightRadius : 0\r\n        }}>\r\n          <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\" style={{background : \"rgba(99, 78, 185, 0.9)\"}}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Pool</TableCell>\r\n            <TableCell>APR</TableCell>\r\n            <TableCell>TVL</TableCell>\r\n            <TableCell>Deposit</TableCell>\r\n            <TableCell>Earning</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showType === \"inactive\" ? inactiverows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          )) : <></>}\r\n          {showType === \"active\" ? activerows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          )) : <></>}\r\n          {showType === \"mygenesis\" ? mygenesisrows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          )) : <></>}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </Box>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","module.exports = __webpack_public_path__ + \"static/media/home.87c905bf.png\";"],"sourceRoot":""}